初始化一个Git仓库：git_init
添加文件到Git仓库，分两步：
    第一步，使用命令git add<file>，可以反复多次使用，添加多个文件；
    第二步，使用命令git commit完成，-m "message"

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id
穿梭前，用git log查看提交历史，以确定回退到哪个版本
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本

丢弃工作区的修改:git checkout -- file(用版本库里的版本替换工作区版本)
丢弃暂存区的修改:git reset HEAD file; git checkout -- file
已经提交到了版本库中:git reset --hard HEAD^

命令git rm 用于删除一个文件，如果一个文件已经被提交到版本库，那么可以恢复，但是只能恢复文件到最新版本，会丢失最近一次提交后修改的所有内容
########################################################################################
添加SSH Key:
ssh -keygen -t rsa -C "youremail@example.com"
将.ssh中id_rsa.pub中的内容复制到GitHub SSH Keys
 
添加远程库：
登录GitHub，点击Create  a new repo按钮，创建一个新的仓库
git remote add origin https://github.com/YoungLou1995/learngit.git
关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
此后，可以使用git push origin master推送最新修改;
########################################################################################

要克隆一个仓库，首要要知道仓库的地址，然后使用git clone　．．．．命令克隆

Git鼓励大量使用分支，更加安全
查看分支:git branch
创建分支:git branch name
切换分支:git checkout name
创建＋切换分支:git checkout -b name
合并某分支到当前分支:git merge name
删除分支:git branch -d name

当Git无法自动合并分支时，就必须先解决冲突，解决冲突后，再提交，合并完成
用 git log --grapn命令可以看到分支合并图

合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast_forward合并就看不出来．
